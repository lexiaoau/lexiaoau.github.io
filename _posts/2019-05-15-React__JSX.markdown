---
author: lexiao
comments: true
date: 2019-05-15 11:11:11+00:00
layout: post
link: http://localhost/blog/?p=450
published: true
slug: null
title: React 之 JSX
wordpress_id: 450
categories:

- react
---

```js
ReactDOM.render(
    <div>
    <h1>菜鸟教程</h1>
    <h2>欢迎学习 React</h2>
    <p data-myattribute = "somevalue">这是一个很不错的 JavaScript 库!</p>
    </div>
    ,
    document.getElementById('example')
);
```

-------------------------------------------------------------------------------------------------



### 通过独立文件引入 react 代码

helloworld_react.js 文件，代码如下：

```js
ReactDOM.render(
    <h1>Hello, world!</h1>,
    document.getElementById('example')
);
```

```html
<body>
    <div id="example"></div>
    <script type="text/babel" src="helloworld_react.js"></script>
</body>
```

-------------------------------------------------------------------------------------------------



### JavaScript 表达式

我们可以在 JSX 中使用 JavaScript 表达式。表达式写在花括号 **{}** 中。实例如下：

```js
ReactDOM.render(
    <div>
        <h1>_{1+1}_</h1>
    </div>,
    document.getElementById('example')
);
```

-------------------------------------------------------------------------------------------------




## React 组件


×××××××××××××××××××××××××××××××××××××××××

_组件规则_



  1. 原生 HTML 元素名以小写字母开头，而自定义的 React 类名以大写字母开头，比如 HelloMessage 不能写成 helloMessage。
  2. 除此之外还需要注意组件类只能包含一个顶层标签，否则也会报错。
  3. 不能与JavaScript关键字冲突
    1. 添加属性时， class 属性需要写成 className ，for 属性需要写成 htmlFor ，这是因为 class 和 for 是 JavaScript 的保留字。


_组件用法_



  1. 使用函数（或者es6）定义一个组件
  2. **const element = ** 为用户自定义的组件。
  3.


```js
function HelloMessage(props) {
    return <h1>Hello {props.name}!</h1>;
}

const element = <HelloMessage name="Runoob"/>;

ReactDOM.render(
    element,
    document.getElementById('example')
);
```

### _如果我们需要向组件传递参数，可以使用 **this.props** 对象,实例如下：_




#### React 实例 ####

```js
function HelloMessage(props) {
    return <h1>Hello {props.name}!</h1>;
}

const element = <HelloMessage name="Runoob"/>;

ReactDOM.render(
    element,
    document.getElementById('example')
);
```



### 复合组件

我们可以通过创建多个组件来合成一个组件，即把组件的不同功能点进行分离。

以下实例我们实现了输出网站名字和网址的组件：

## React 实例

```js
function Name(props) {
    return <h1>网站名称：{props.name}</h1>;
}
function Url(props) {
    return <h1>网站地址：{props.url}</h1>;
}
function Nickname(props) {
    return <h1>网站小名：{props.nickname}</h1>;
}
function App() {
    return (
    <div>
        <Name name="菜鸟教程" />
        <Url url="http://www.runoob.com" />
        <Nickname nickname="Runoob" />
    </div>
    );
}

ReactDOM.render(
     <App />,
    document.getElementById('example')
);
```
